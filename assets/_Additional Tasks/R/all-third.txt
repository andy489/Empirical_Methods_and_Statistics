# не са чувствителни към outliers
IQR(survey$Age)
mad(survey$Age)

# чувствителни са към outliers
var(survey$Age)
sd(survey$Age)

hist(survey$Age)
rug(survey$Age) # represent the data to the plot

# jitter - adds a little noise
head(survey$Age)
# [1] 18.250 17.583 16.917 20.333 23.667 21.000
head(jitter(survey$Age))
# [1] 18.24628 17.57149 16.90796 20.33290 23.66721 21.01301
hist(survey$Age)
rug(jitter(survey$Age))

# histogram и boxplot на 1 диаграма
library(UsingR)
simple.hist.and.boxplot(survey$Age)

?simple.hist.and.boxplot

x<-rnorm(100)
simple.hist.and.boxplot(x)



data("survey")

# Frequency polygons
h<-hist(survey$Age)
lines(x = c(min(h$breaks), h$mids, max(h$breaks)),
       y = c(0, h$counts, 0),
       type = "l",
       lwd = 2)

simple.freqpoly(survey$Age)


# ПЛЪТНОСТ
density(survey$Age)

hist(survey$Age, probability = TRUE)
lines(density(survey$Age), lwd = 2)

density(survey$Age, bw = 0.1)
hist(survey$Age, probability = TRUE, ylim = c(0, 0.4))
lines(density(survey$Age, bw = 0.1), lwd = 2)



# BIVARIATE DATA

# CATEGORICAL vs. CATEGORICAL data

smokes <- c("Yes", "No", "No", "Yes", "No", "Yes", "Yes", "Yes", "No", "Yes")
amount <- c(1, 2, 2, 3, 3, 1, 2, 1, 3, 2)
table(smokes, amount)

prop.table(table(smokes, amount)) # всички се сумират до 1
prop.table(table(smokes, amount), 1) # всички редове се сумират до 1
prop.table(table(smokes, amount), 2) # всички колони се сумират до 1

barplot(table(smokes,amount),
         names.arg = c("<5 hours", "5-10 hours", ">10 hours"),
         legend.text = c("Not smoking", "Smoking"),
         beside = TRUE,
         col = c("Green", "Grey"),
         xlab = "study hours")

# CATEGORICAL vs. NUMERICAL data

group.experimental <- c(5, 5, 5, 13, 7, 11, 11, 9, 8, 9)
group.control <- c(11, 8, 4, 5, 9, 5, 10, 5, 4, 10)
boxplot(group.experimental, group.control)

amount = c(5, 5, 5, 13, 7, 11, 11, 9, 8, 9, 11, 8, 4, 5, 9, 5, 10, 5, 4, 10)
category = c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2)
boxplot(amount ~ category) # amount се определя чрез category 

# NUMERICAL vs. NUMERICAL data

boxplot(home$new, home$old, horizontal = TRUE, 
        names = c("New", "Old"))

# със scale за да може да наблюдаваме смислени резултати за
# разликите в разпределението
boxplot(c(scale(home$old)), c(scale(home$new)), 
        horizontal = TRUE)

# могат да се използват и други диаграми
?stripchart
stripchart(scale(home$old))
stripchart(scale(home$new))

dotplot(home$old)
dotplot(home$new)

# сравняване на форма на разпределение

?violinplot # сходно с boxplot но дава повече информация за разпределението

violinplot(scale(home$old), scale(home$new))
# друг начин
simple.violinplot(scale(home$old),scale(home$new))




# ВРЪЗКА МЕЖДУ ПРОМЕНЛИВИТЕ

# scatter plot
plot(home$old, home$new)

cov(home$old, home$new) # между -inf и +inf
cor(home$old, home$new) # между 0 и 1

# Spearman rank correlation is close to 1 (or -1) 
# if there is a strong increasing (decreasing) trend in the data. 
# (The trend need not be linear.)

# The Spearman correlation is less sensitive than 
# the Pearsin correlation to strong outliers that 
# are in the tails of both samples.

cor(rank(home$old), rank(home$new))





# Simple linear regression



plot(home$old, home$new)
abline(lm(home$new ~ home$old))

# същото но и връща съответните коефициенти
simple.lm(home$old, home$new)

# residual plot
simple.lm(home$old, home$new, show.residuals = TRUE); par(mfrow=c(1,1))
# The lower left is a histogram of the residuals. 
# If the standard model is applicable, then 
# this should appear “bell” shaped.


simple.lm(florida$BUSH, florida$BUCHANAN)
identify(florida$BUSH, florida$BUCHANAN) 
# click on the outliers and press ESC

# модела след премахване на outlier-ите
florida.cleaned <- florida[-c(13, 50), ]
linearmodel <- simple.lm(florida.cleaned$BUSH, florida.cleaned$BUCHANAN)

# предсказваме на база изчистеният модел, 
# колко е трябвало да бъде при стойността на съответния outlier
simple.lm(florida.cleaned$BUSH, florida.cleaned$BUCHANAN, 
          pred = florida$BUSH[50])
#1 
# 711.6168 -> очаквало се е да получи 712 гласа от този град, вместо реално получените

# зависимост с и без outlier-и на 1 графика
plot(florida$BUSH, florida$BUCHANAN)
abline(lm(florida$BUCHANAN ~ florida$BUSH), lwd = 2)
abline(65.6, 0.00348, col = "Blue", lwd = 2)



# MULTIVARIATE DATA

#CATEGORICAL DATA
library(MASS)
data(Cars93)
attach(Cars93)
sort(table(Manufacturer), decreasing = TRUE)

?factor

table(Type)
Type <- factor(Type, levels = c("Small", "Compact", "Midsize", "Large", "Sporty", "Van"))
table(Type)

# 3 категорийни променливи
table(DriveTrain, Type, Man.trans.avail)

ftable(Manufacturer, AirBags, Type)

# графики
barplot(sort(table(Manufacturer), decreasing = TRUE),
         main = "Manufacturer",
         ylab = "Frequency",
         las = 2,
         col = rainbow(length(levels(Manufacturer))))

barplot(table(AirBags, Type),
         main = "Airbag types by different types of car",
         beside = TRUE,
         ylab = "Frequency",
         col = c("Green", "Yellow", "Red"),
         legend.text = TRUE)



# CATEGORICAL AND NUMERICAL DATA

# weight - числова, group - категорийна
boxplot(PlantGrowth$weight ~ PlantGrowth$group) # числова ~ категорийна

# друг начин
?unstack
# Stacking vectors concatenates multiple vectors into a single vector 
# along with a factor indicating where each observation originated. 
# Unstacking reverses this operation.
boxplot(unstack(PlantGrowth))

# с други графики
stripchart(PlantGrowth$weight ~ PlantGrowth$group)

library(UsingR)
simple.violinplot(PlantGrowth$weight ~ PlantGrowth$group, 
                  col = "lightgray")

simple.densityplot(PlantGrowth$weight ~ PlantGrowth$group)

# ---

plot(ToothGrowth$len ~ ToothGrowth$dose,
      main = "Tooth growth depending on the dose and given type of vitamin C",
      xlab = "Vitamin C dose",
      ylab = "Tooth length",
      col = colors[ToothGrowth$supp],
      bg = "lightgray",
      pch = shapes[ToothGrowth$supp],
      lwd = 0.9,
      cex = 1.5)
legend("bottomright", inset = 0.05,
        title="Source of vitamin C",
        legend = c("Orange juice", "Vitamin supplement"),
        col = colors,
        bg = "lightgray",
        pch = shapes)


names(Cars93)
# как Price зависи от Type
histogram( ~ Price, data = Cars93) 

histogram( ~ Price | Type, data = Cars93)

histogram( ~ Price | DriveTrain * Origin, data = Cars93)

bwplot( ~ Price, data = Cars93)
bwplot( ~ Price | Type, data = Cars93)
bwplot( ~ Price | DriveTrain * Origin, data = Cars93)


# NUMERICAL DATA

simple.scatterplot(emissions$perCapita, emissions$CO2)
pairs(emissions, main = "Emissions")

pairs( ~ perCapita + GDP + CO2, data = emissions,
       main = "Emissions",
       col = "lightskyblue",
       pch = 16)

qplot(temperature, ozone, data = environmental)

environmental$temperature
# нека разделим стойностите на temperature в 3 интервала
temperature.cut <- cut(environmental$temperature, 3)
temperature.cut

# 1 графика на зависимостта на ozone от radiation за всеки от интервалите в temperature.cut
xyplot(ozone ~ radiation | temperature.cut, data = environmental)
xyplot(ozone ~ radiation | temperature.cut, data = environmental, layout = c(1, 3))

# добавяме и  linear regression lines 
xyplot(ozone ~ radiation | temperature.cut, data = environmental,
        panel = function(x, y, ...){
          panel.xyplot(x, y, ...)
          fit <- lm(y ~ x)
          panel.abline(fit, lwd = 2)
        },
        xlab = "Solar Radiation",
        ylab = "Ozone (ppb)",
        pch = 20)

# как 2 променливи зависят 1 от друга в зависимост от стойностите на 2 други променливи
temperature.cut <- cut(environmental$temperature, 2)
wind.cut <- cut(environmental$wind, 2)
xyplot(ozone ~ radiation | temperature.cut * wind.cut, data = environmental,
        panel = function(x, y, ...){
          panel.xyplot(x, y, ...)
          fit <- lm(y ~ x)
          panel.abline(fit, lwd = 2)
        },
        xlab = "Solar Radiation",
        ylab = "Ozone (ppb)",
        pch = 20)


plot.regression = function(x,y) {
   panel.xyplot(x,y)
   panel.abline(lm(y~x))
 }
xyplot(MPG.highway ~ Fuel.tank.capacity | Type, panel = plot.regression)

qplot(displ, hwy, data = mpg, color = drv)
qplot(hwy, data = mpg, facets = drv~., binwidth = 2)
qplot(hwy, data = mpg, geom = "density", color = drv)
qplot(group, weight, data = PlantGrowth, geom = "boxplot",
       fill = group)
ggplot(data = iris, aes(Species, Sepal.Length)) +
   geom_boxplot(aes(colour = Sepal.Width < 3.2))
qplot(group, weight, data = PlantGrowth, geom = "violin",
       fill = group)
ggplot(diamonds, aes(price, colour = cut)) +
   geom_freqpoly()

